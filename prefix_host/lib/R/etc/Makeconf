# etc/Makeconf.  Generated from Makeconf.in by configure.
#
# ${R_HOME}/etc/Makeconf
#
# R was configured using the following call
# (not including env. vars and site configuration)
# configure  '--prefix=/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-rlang_1724342075/host_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh' '--build=x86_64-conda-linux-gnu' '--host=wasm32-unknown-emscripten' '--enable-R-static-lib' '--enable-BLAS-shlib=no' '--with-cairo' '--without-readline' '--without-x' '--enable-static=[Rlapack,stats]' '--enable-java=no' '--enable-R-profiling=no' '--enable-byte-compiled-packages=no' '--disable-rpath' '--with-internal-tzcode' '--with-recommended-packages=no' '--with-libdeflate-compression=no' 'build_alias=x86_64-conda-linux-gnu' 'host_alias=wasm32-unknown-emscripten' 'MAIN_CFLAGS=-sMAIN_MODULE --pre-js /home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/recipes/recipes_emscripten/r-base/pre.js' 'SHLIB_CFLAGS=-sSIDE_MODULE' 'SHLIB_LDFLAGS=-sSIDE_MODULE' 'DYLIB_LDFLAGS=-sSIDE_MODULE' 'PKG_CONFIG=/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/bin/pkg-config' 'PKG_CONFIG_PATH=' 'PKG_CONFIG_LIBDIR=/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/opt/emsdk/upstream/emscripten/cache/sysroot/local/lib/pkgconfig:/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/opt/emsdk/upstream/emscripten/cache/sysroot/lib/pkgconfig' 'CC=/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/opt/emsdk/upstream/emscripten/emcc' 'CFLAGS= -matomics -mbulk-memory' 'LDFLAGS=-L/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-rlang_1724342075/host_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib     -s WASM_BIGINT     -s STACK_SIZE=5MB     -s ALLOW_MEMORY_GROWTH=1     -s EXPORTED_RUNTIME_METHODS=callMain,FS,ENV,getEnvStrings,TTY     -s FORCE_FILESYSTEM=1     -s INVOKE_RUN=0' 'LIBS=-lFortranRuntime' 'CPPFLAGS=-I/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-rlang_1724342075/host_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/include' 'FC=flang-new' 'FCFLAGS= --target=wasm32-unknown-emscripten' 'CXX=/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/opt/emsdk/upstream/emscripten/em++'

## This fails if it contains spaces, or if it is quoted
include $(R_SHARE_DIR)/make/vars.mk

AR = emar
BLAS_LIBS = 

## C compilers
CC = emcc
CFLAGS =  -matomics -mbulk-memory $(LTO)
CC17 = emcc
C17FLAGS =  $(LTO)
CC23 = emcc
C23FLAGS =  $(LTO)
CC90 = emcc
C90FLAGS =  $(LTO)
CC99 = emcc
C99FLAGS =  $(LTO)
CPICFLAGS = -fpic
CPPFLAGS = -I$(PREFIX)/include
C_VISIBILITY = -fvisibility=hidden

## C++ compilers
CXX = em++ -std=gnu++17
CXXFLAGS = -g -O2 $(LTO)
CXXPICFLAGS = -fpic
CXX11 = em++
CXX11FLAGS = -g -O2 $(LTO)
CXX11PICFLAGS = -fpic
CXX11STD = -std=gnu++11
CXX14 = em++
CXX14FLAGS = -g -O2 $(LTO)
CXX14PICFLAGS = -fpic
CXX14STD = -std=gnu++14
CXX17 = em++
CXX17FLAGS = -g -O2 $(LTO)
CXX17PICFLAGS = -fpic
CXX17STD = -std=gnu++17
CXX20 = em++
CXX20FLAGS = -g -O2 $(LTO)
CXX20PICFLAGS = -fpic
CXX20STD = -std=gnu++20
CXX23 = em++
CXX23FLAGS = -g -O2 $(LTO)
CXX23PICFLAGS = -fpic
CXX23STD = -std=gnu++23
CXX_VISIBILITY = -fvisibility=hidden

DYLIB_EXT = .so
DYLIB_LD = $(CC)
DYLIB_LDFLAGS = -sSIDE_MODULE -sSIDE_MODULE -shared -pthread# $(CFLAGS) $(CPICFLAGS) 
## should be used by packages for dylibs, but at the time of writing was not
DYLIB_LINK = $(DYLIB_LD) $(DYLIB_LDFLAGS) $(LDFLAGS)
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 

## Fortran
FC = flang-new
FCFLAGS =  --target=wasm32-unknown-emscripten $(LTO_FC)
## additional libs needed when linking with $(FC), e.g. on some Oracle compilers
FCLIBS_XTRA = 
FFLAGS =  --target=wasm32-unknown-emscripten $(LTO_FC)
FLIBS = 
FPICFLAGS = -fpic
FPIEFLAGS = -fPIE
F_VISIBILITY = 

FOUNDATION_CPPFLAGS = 
FOUNDATION_LIBS = 
JAR = 
JAVA = 
JAVAC = 
JAVAH = 
## JAVA_HOME might be used in the next three.  
## They are for packages 'JavaGD' and 'rJava'
JAVA_HOME = 
JAVA_CPPFLAGS = 
JAVA_LIBS = 
JAVA_LD_LIBRARY_PATH = 
LAPACK_LIBS = -L"$(R_HOME)/lib$(R_ARCH)" -lRlapack
LDFLAGS = -L/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-rlang_1724342075/host_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib     -s WASM_BIGINT     -s STACK_SIZE=5MB     -s ALLOW_MEMORY_GROWTH=1     -s EXPORTED_RUNTIME_METHODS=callMain,FS,ENV,getEnvStrings,TTY     -s FORCE_FILESYSTEM=1     -s INVOKE_RUN=0
## we only need this is if it is external, as otherwise link to R
LIBINTL=  
LIBM = -lm
LIBR0 = 
LIBR1 = 
LIBR =  
LIBS = -L/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-rlang_1724342075/host_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib -lpcre2-8 -llzma -lbz2 -lz -lblas -lrt -ldl -lm -lFortranRuntime -liconv
## needed by R CMD config
LIBnn = lib
LIBTOOL = $(SHELL) "$(R_HOME)/bin/libtool"
## set for --enable-lto, --enable-lto=check
LTO = 
LTO_FC = 
LTO_LD = 
## set for --enable-lto=R, used in INSTALL
LTO_OPT = 
LTO_FC_OPT = 
## needed to build applications linking to static libR
MAIN_LD = $(CC)
MAIN_LDFLAGS = -pthread
MAIN_LINK = $(MAIN_LD) $(MAIN_LDFLAGS) $(LDFLAGS)
MKINSTALLDIRS = "$(R_HOME)/bin/mkinstalldirs"
NM = /home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/bin/llvm-nm
OBJC = 
OBJCFLAGS =  $(LTO)
OBJC_LIBS = 
OBJCXX = 
R_ARCH = 
RANLIB = emranlib
SAFE_FFLAGS =  --target=wasm32-unknown-emscripten
## A version of SHLIB_LIBADD not overridden in install.R.
SAN_LIBS =
SED = /home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/bin/sed
SHELL = /bin/sh
SHLIB_CFLAGS = -sSIDE_MODULE
SHLIB_CXXFLAGS = 
SHLIB_CXXLD = $(CXX)
SHLIB_CXXLDFLAGS = -shared# $(CXXFLAGS) $(CXXPICFLAGS) $(LTO_LD)
SHLIB_CXX11LD = $(CXX11) $(CXX11STD)
SHLIB_CXX11LDFLAGS = -shared# $(CXX11FLAGS) $(CXX11PICFLAGS) $(LTO_LD)
SHLIB_CXX14LD = $(CXX14) $(CXX14STD)
SHLIB_CXX14LDFLAGS = -shared# $(CXX14FLAGS) $(CXX14PICFLAGS) $(LTO_LD)
SHLIB_CXX17LD = $(CXX17) $(CXX17STD)
SHLIB_CXX17LDFLAGS = -shared# $(CXX17FLAGS) $(CXX17PICFLAGS) $(LTO_LD)
SHLIB_CXX20LD = $(CXX20) $(CXX20STD)
SHLIB_CXX20LDFLAGS = -shared# $(CXX20FLAGS) $(CXX20PICFLAGS) $(LTO_LD)
SHLIB_CXX23LD = $(CXX23) $(CXX23STD)
SHLIB_CXX23LDFLAGS = -shared# $(CXX23FLAGS) $(CXX23PICFLAGS) $(LTO_LD)
SHLIB_EXT = .so
SHLIB_FCLD = $(FC)
SHLIB_FCLDFLAGS = -sSIDE_MODULE -shared# $(FCFLAGS) $(FPICFLAGS)
SHLIB_FFLAGS = 
SHLIB_LD = $(CC)
## used for add-on packages linked by C
SHLIB_LDFLAGS = -sSIDE_MODULE -shared# $(CFLAGS) $(CPICFLAGS) $(LTO_LD)
## used for standard packages
SHLIB_LDFLAGS_R = -sSIDE_MODULE -shared# $(CFLAGS) $(CPICFLAGS) $(LTO_LD)
## used in install.R to add OBJC_LIBS, FLIBS ....
SHLIB_LIBADD = 
## We want to ensure libR is picked up from $(R_HOME)/lib
## before e.g. /usr/local/lib if a version is already installed.
SHLIB_LINK = $(SHLIB_LD) $(SHLIB_LDFLAGS) $(LIBR0) $(LDFLAGS)
SHLIB_OPENMP_CFLAGS = 
SHLIB_OPENMP_CXXFLAGS = 
SHLIB_OPENMP_FFLAGS = 
STRIP_STATIC_LIB = strip --strip-debug
STRIP_SHARED_LIB = strip --strip-unneeded
TCLTK_CPPFLAGS = -I/usr/include -I/usr/include 
TCLTK_LIBS = -L/usr/lib -ltcl8.6 -L/usr/lib -ltk8.6 -lX11 -lXss -lXext
YACC = bison -y

## for linking to libR.a
STATIC_LIBR =   "$(R_HOME)/lib$(R_ARCH)/libR.a"  $(BLAS_LIBS) $(FLIBS)  $(LIBINTL)  $(LIBS)

## These are recorded as macros for legacy use in packages
## set on AIX, formerly for old glibc (-D__NO_MATH_INLINES)
R_XTRA_CFLAGS = 
##  was formerly set on HP-UX
R_XTRA_CPPFLAGS =  -I"$(R_INCLUDE_DIR)" -DNDEBUG
## currently unset
R_XTRA_CXXFLAGS = 
## used for gfortran >= 7 in R 3.6.1 - 4.2.x
R_XTRA_FFLAGS = 

## SHLIB_CFLAGS SHLIB_CXXFLAGS SHLIB_FFLAGS are apparently currently unused
## SHLIB_CXXFLAGS is undocumented, there is no SHLIB_FCFLAGS
ALL_CFLAGS =  $(PKG_CFLAGS) $(CPICFLAGS) $(SHLIB_CFLAGS) $(CFLAGS)
## XDEFS was a temporary measure for use by R CMD INSTALL
ALL_CPPFLAGS =  -I"$(R_INCLUDE_DIR)" -DNDEBUG $(PKG_CPPFLAGS) $(CLINK_CPPFLAGS) $(CPPFLAGS)  $(XDEFS)
## CXX_DEFS allows adding defines only for C++, e.g. -DR_NO_REMAP
ALL_CXXFLAGS =  $(PKG_CXXFLAGS) $(CXXPICFLAGS) $(SHLIB_CXXFLAGS) $(CXXFLAGS) $(CXX_DEFS)
ALL_OBJCFLAGS = $(PKG_OBJCFLAGS) $(CPICFLAGS) $(SHLIB_CFLAGS) $(OBJCFLAGS)
ALL_OBJCXXFLAGS = $(PKG_OBJCXXFLAGS) $(CXXPICFLAGS) $(SHLIB_CXXFLAGS) $(OBJCXXFLAGS)
ALL_FFLAGS =  $(PKG_FFLAGS) $(FPICFLAGS) $(SHLIB_FFLAGS) $(FFLAGS)
## can be overridden by R CMD SHLIB
P_FCFLAGS = $(PKG_FFLAGS)
ALL_FCFLAGS =  $(P_FCFLAGS) $(FPICFLAGS) $(SHLIB_FFLAGS) $(FCFLAGS)
## LIBR here as a couple of packages use this without SHLIB_LINK
ALL_LIBS = $(PKG_LIBS) $(SHLIB_LIBADD) $(SAN_LIBS) $(LIBR)# $(LIBINTL)

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .d .f .f90 .f95 .m .mm .M .o

.c.o:
	$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) -c $< -o $@
.c.d:
	@echo "making $@ from $<"
	@$(CC) -MM $(ALL_CPPFLAGS) $< > $@
.cc.o:
	$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -c $< -o $@
.cpp.o:
	$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -c $< -o $@
.cc.d:
	@echo "making $@ from $<"
	@$(CXX) -M $(ALL_CPPFLAGS) $< > $@
.cpp.d:
	@echo "making $@ from $<"
	@$(CXX) -M $(ALL_CPPFLAGS) $< > $@
.m.o:
	$(OBJC) $(ALL_CPPFLAGS) $(ALL_OBJCFLAGS) -c $< -o $@
.m.d:
	@echo "making $@ from $<"
	@/home/ihuicatl/Repos/Packaging/emscripten-forge-recipes/output/bld/rattler-build_r-base_1724341568/build_env/opt/emsdk/upstream/emscripten/emcc -E -M $(ALL_CPPFLAGS) $< > $@
.mm.o:
	$(OBJCXX) $(ALL_CPPFLAGS) $(ALL_OBJCXXFLAGS) -c $< -o $@
.M.o:
	$(OBJCXX) $(ALL_CPPFLAGS) $(ALL_OBJCXXFLAGS) -c $< -o $@
.f.o:
	$(FC) $(ALL_FFLAGS) -c $< -o $@
.f95.o:
	$(FC) $(ALL_FCFLAGS) -c  $< -o $@
.f90.o:
	$(FC) $(ALL_FCFLAGS) -c  $< -o $@
